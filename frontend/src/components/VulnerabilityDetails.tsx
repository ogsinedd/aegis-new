import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from './ui/dialog';
import { Badge } from './ui/badge';
import { ScrollArea } from './ui/scroll-area';
import { Separator } from './ui/separator';
import { AlertTriangle, Shield, Link, Clock } from 'lucide-react';

interface VulnerabilityDetailsProps {
  vulnerability: {
    cve_id: string;
    severity: 'Critical' | 'High' | 'Medium' | 'Low' | 'Unknown';
    cvss?: number;
    description: string;
    recommendation?: string;
    host_name?: string;
    container_name?: string;
    discovered_at?: string;
    references?: string[];
  } | null;
  isOpen: boolean;
  onClose: () => void;
}

const severityColors = {
  Critical: 'bg-red-500',
  High: 'bg-orange-500',
  Medium: 'bg-yellow-500',
  Low: 'bg-blue-500',
  Unknown: 'bg-gray-500',
};

export function VulnerabilityDetails({ vulnerability, isOpen, onClose }: VulnerabilityDetailsProps) {
  if (!vulnerability) return null;

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-2xl max-h-[80vh] overflow-hidden flex flex-col">
        <DialogHeader>
          <div className="flex items-center gap-2">
            <AlertTriangle className="h-5 w-5 text-warning" />
            <DialogTitle className="font-mono">{vulnerability.cve_id}</DialogTitle>
          </div>
          <div className="flex items-center gap-2 mt-2">
            <Badge className={severityColors[vulnerability.severity]}>
              {vulnerability.severity}
            </Badge>
            {vulnerability.cvss && (
              <Badge variant="outline">
                CVSS: {vulnerability.cvss.toFixed(1)}
              </Badge>
            )}
          </div>
        </DialogHeader>

        <ScrollArea className="flex-1">
          <div className="space-y-4 p-1">
            <div>
              <h4 className="font-medium mb-2">Описание</h4>
              <p className="text-sm text-muted-foreground">
                {vulnerability.description}
              </p>
            </div>

            {vulnerability.recommendation && (
              <>
                <Separator />
                <div>
                  <h4 className="font-medium mb-2 flex items-center gap-2">
                    <Shield className="h-4 w-4" />
                    Рекомендации по устранению
                  </h4>
                  <p className="text-sm text-muted-foreground">
                    {vulnerability.recommendation}
                  </p>
                </div>
              </>
            )}

            <Separator />
            
            <div>
              <h4 className="font-medium mb-2">Расположение</h4>
              <div className="grid grid-cols-2 gap-2 text-sm">
                <div>
                  <span className="text-muted-foreground">Хост:</span>
                  <span className="ml-2 font-mono">{vulnerability.host_name || 'N/A'}</span>
                </div>
                <div>
                  <span className="text-muted-foreground">Контейнер:</span>
                  <span className="ml-2 font-mono">{vulnerability.container_name || 'N/A'}</span>
                </div>
              </div>
            </div>

            {vulnerability.discovered_at && (
              <>
                <Separator />
                <div>
                  <h4 className="font-medium mb-2 flex items-center gap-2">
                    <Clock className="h-4 w-4" />
                    Обнаружено
                  </h4>
                  <p className="text-sm text-muted-foreground">
                    {new Date(vulnerability.discovered_at).toLocaleString()}
                  </p>
                </div>
              </>
            )}

            {vulnerability.references && vulnerability.references.length > 0 && (
              <>
                <Separator />
                <div>
                  <h4 className="font-medium mb-2 flex items-center gap-2">
                    <Link className="h-4 w-4" />
                    Ссылки
                  </h4>
                  <ul className="text-sm space-y-1">
                    {vulnerability.references.map((ref, idx) => (
                      <li key={idx}>
                        <a
                          href={ref}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-accent hover:underline"
                        >
                          {ref}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              </>
            )}
          </div>
        </ScrollArea>
      </DialogContent>
    </Dialog>
  );
} 
